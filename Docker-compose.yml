# bandit:
services:
  bandit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bandit_scanner
    volumes:
      - ./src:/src
      - ./reports:/output # Mapeia o projeto para o container
    entrypoint: ["bandit", "-r", "/src", "-f", "json", "-o", "/output/bandit-report.json"]

# gitleaks:
  gitleaks:
    image: zricethezav/gitleaks:latest
    container_name: gitleaks_git_scanner
    working_dir: /work
    volumes:
      - ./reports:/output
    entrypoint:
      - /bin/sh
      - -c
      - |
        git clone https://github.com/LuizHenriqueMB/challenge.git /repo && \
        gitleaks detect --no-git --source=/repo --report-format=json --report-path=/output/gitleaks-report.json
    # MELHORIA: Utilização de script no entrypoint para clonar dinamicamente o repositório.
    # Isso permite que o Gitleaks opere de forma independente, sem depender de volumes locais,
    # facilitando a execução em ambientes automatizados (CI/CD). 
    # Como alternativa, seria possível mapear o diretório ./src via volume, mas isso exigiria pré-download do código.

  # trivy:
  trivy:
    image: aquasec/trivy:latest
    volumes:
      - ./reports:/reports # Diretório onde o Trivy salva o relatório
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: [] # Deixado vazio para passar o comando pelo Makefile